1. In the browser, most of the time we interact with the DOM, or other Web Platform APIs like Cookies. Those do not exist in Node.js, of course. You don't have the document, window and all the other objects in Node.js that are provided by the browser.

2. In the browser, we don't have all the nice APIs that Node.js provides through its modules, like the filesystem access functionality. 

3. In Node.js you control the environment. Unless you are building an open source application that anyone can deploy anywhere, you know which version of Node.js you will run the application on. Compared to the browser environment, where you don't get the luxury to choose what browser your visitors will use, this is very convenient.

4. Another syntactical difference is that you use require() in the Node.js whereas in the browser you use import.

5. In browser you use Babel to transform your code to be ES5-compatible before shipping it to the browser, but in Node.js, you won't need that.

6. Another difference is that Node.js uses the CommonJS module system, while in the browser we are starting to see the ES Modules standard being implemented.